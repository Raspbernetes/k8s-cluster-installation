---
- name: 'install containerd on debian based platforms'
  block:
  - name: 'containerd | ensure docker.io apt repository public key is installed'
    ansible.builtin.apt_key:
      url: '{{ containerd_repo_gpgkey }}'
  - name: 'containerd | ensure docker.io apt repository is enabled'
    ansible.builtin.apt_repository:
      repo: 'deb {{ containerd_repo_base_url }} {{ ansible_distribution_release }} stable'
      state: 'present'
  # this is to prevent apt upgrade from breaking kubernetes
  - name: 'containerd | pin package version to prevent os upgrade clubbing'
    ansible.builtin.copy:
      content: |
        Package: {{ containerd_package }}
        Pin: version {{ containerd_version }}*
        Pin-Priority: 1001
      dest: '/etc/apt/preferences.d/containerd'
      owner: 'root'
      mode: 0644
  - name: 'containerd | install package from apt repository'
    ansible.builtin.apt:
      name:
      - '{{ containerd_package }}={{ containerd_version|string }}-1'
      state: 'present'
      update_cache: true
      cache_valid_time: 3600
  when: ansible_os_family|lower == 'debian'

# Archlinux installation of containerd package
- name: 'containerd | install containerd package'
  pacman:
    name: 'containerd'
    state: 'present'
    update_cache: true
  when: ansible_os_family | lower == 'archlinux'

- name: 'containerd | ensure config directory exists and has proper ownerships'
  ansible.builtin.file:
    path: '{{ containerd_config_dir }}'
    state: 'directory'
    mode: 0755
    owner: 'root'
    group: 'root'

- name: 'containerd | copy containerd config file'
  ansible.builtin.template:
    src: 'config.toml.j2'
    dest: '{{ containerd_config_dir }}/config.toml'
    owner: 'root'
    mode: 0644
  notify: containerd configuration changed
  when: not containerd_default_config

- name: 'containerd | generate default configuration file'
  ansible.builtin.command: |
    containerd config default
  register: containerd_default_config_file
  changed_when: false
  when: containerd_default_config

- name: 'containerd | ensure default configuration'
  ansible.builtin.copy:
    dest: '{{ cri_containerd_config_dir }}/config.toml'
    content: '{{ containerd_default_config_file.stdout }}'
  notify: containerd configuration changed
  when: containerd_default_config

- name: 'containerd | install crictl binary'
  ansible.builtin.include_role:
    name: 'containerd-runtime/crictl'

- name: 'containerd | flush handlers'
  meta: flush_handlers

- name: 'containerd | ensure containerd is enabled and started'
  ansible.builtin.server:
    name: 'containerd.service'
    enabled: true
    state: 'started'
